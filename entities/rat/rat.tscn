[gd_scene load_steps=13 format=3 uid="uid://b3cvpg88gcth2"]

[ext_resource type="Script" path="res://entities/rat/rat.gd" id="1_a8hsv"]
[ext_resource type="PackedScene" uid="uid://dwxgvnwwvilaq" path="res://entities/rat/Rat.glb" id="1_r0i6e"]
[ext_resource type="Texture2D" uid="uid://cnwebl6uv0ise" path="res://entities/rat/ear.png" id="3_vu3dv"]
[ext_resource type="Texture2D" uid="uid://bqbetwndk4xic" path="res://entities/rat/particles.png" id="4_qdp7e"]
[ext_resource type="AudioStream" uid="uid://digmpe17fxiur" path="res://audios/effects/swoosh.mp3" id="5_7gwy5"]

[sub_resource type="SphereShape3D" id="SphereShape3D_y6qio"]
radius = 0.25

[sub_resource type="Curve" id="Curve_lekcr"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.83391, 1), 0.0, 0.0, 0, 0, Vector2(0.99999, 0.671809), 0.0, 0.0, 0, 0, Vector2(1, 1), 0.0, 0.0, 0, 0]
point_count = 4

[sub_resource type="CurveTexture" id="CurveTexture_06kg3"]
curve = SubResource("Curve_lekcr")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_bnanl"]
direction = Vector3(0, 1, -1)
spread = 25.0
initial_velocity_min = 1.0
initial_velocity_max = 1.0
gravity = Vector3(0, 0, 0)
scale_min = 0.8
scale_max = 1.2
scale_curve = SubResource("CurveTexture_06kg3")
anim_speed_min = 1.0
anim_speed_max = 1.0

[sub_resource type="Shader" id="Shader_vporb"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform int particles_anim_h_frames;
uniform int particles_anim_v_frames;
uniform bool particles_anim_loop;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	mat4 mat_world = mat4(normalize(INV_VIEW_MATRIX[0]), normalize(INV_VIEW_MATRIX[1]) ,normalize(INV_VIEW_MATRIX[2]), MODEL_MATRIX[3]);
	mat_world = mat_world * mat4(vec4(cos(INSTANCE_CUSTOM.x), -sin(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(sin(INSTANCE_CUSTOM.x), cos(INSTANCE_CUSTOM.x), 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_MATRIX = VIEW_MATRIX * mat_world;
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
	float h_frames = float(particles_anim_h_frames);
	float v_frames = float(particles_anim_v_frames);
	float particle_total_frames = float(particles_anim_h_frames * particles_anim_v_frames);
	float particle_frame = floor(INSTANCE_CUSTOM.z * float(particle_total_frames));
	if (!particles_anim_loop) {
		particle_frame = clamp(particle_frame, 0.0, particle_total_frames - 1.0);
	} else {
		particle_frame = mod(particle_frame, particle_total_frames);
	}
	UV /= vec2(h_frames, v_frames);
	UV += vec2(mod(particle_frame, h_frames) / h_frames, floor((particle_frame + 0.5) / h_frames) / v_frames);
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	EMISSION = (emission.rgb+emission_tex)*emission_energy;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ll23s"]
render_priority = 0
shader = SubResource("Shader_vporb")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/particles_anim_h_frames = 6
shader_parameter/particles_anim_v_frames = 1
shader_parameter/particles_anim_loop = false
shader_parameter/emission = Color(1, 1, 1, 1)
shader_parameter/emission_energy = 4.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("4_qdp7e")

[sub_resource type="QuadMesh" id="QuadMesh_8tkjo"]
material = SubResource("ShaderMaterial_ll23s")
size = Vector2(0.1, 0.1)

[node name="rat" type="CharacterBody3D"]
collision_layer = 384
collision_mask = 64
script = ExtResource("1_a8hsv")
id = "rat"
to_save = Array[String](["size", "dead"])

[node name="rat" parent="." instance=ExtResource("1_r0i6e")]

[node name="Skeleton3D" parent="rat/RootNode/RatArmature" index="0"]
bones/1/position = Vector3(0.00101987, 0.000298094, 0.0029041)
bones/1/rotation = Quaternion(0.486421, -0.51322, -0.51322, 0.486421)
bones/3/position = Vector3(0.00153205, 0.0011953, -1.73544e-05)
bones/3/rotation = Quaternion(2.19777e-14, 1.03397e-07, -0.76956, 0.638574)
bones/4/rotation = Quaternion(-0.223752, 0.223751, 0.670772, 0.670772)
bones/5/rotation = Quaternion(0.93369, -0.352889, -0.0472598, 0.0381911)
bones/5/scale = Vector3(1, 1, 1)
bones/6/rotation = Quaternion(-0.294998, -0.0181377, -0.00560097, 0.955309)
bones/8/rotation = Quaternion(-0.271344, 0.271344, 0.652972, 0.652972)
bones/9/rotation = Quaternion(-0.791153, 0.338223, -0.459273, 0.220798)
bones/9/scale = Vector3(1, 1, 1)
bones/10/rotation = Quaternion(-0.00324857, 0.0193516, 6.27181e-05, 0.999808)
bones/10/scale = Vector3(1, 1, 1)
bones/12/rotation = Quaternion(0.706996, 0.706996, 0.0125262, -0.012525)
bones/13/rotation = Quaternion(0.000804087, -0.0777773, 0.663659, 0.743981)
bones/13/scale = Vector3(1, 1, 1)
bones/14/rotation = Quaternion(-0.617832, 0.0410794, 0.0323491, 0.78457)
bones/14/scale = Vector3(1, 1, 1)
bones/16/rotation = Quaternion(0.66368, 0.66368, 0.243986, -0.243986)
bones/17/rotation = Quaternion(0.378351, 0.341169, 0.651394, 0.562264)
bones/17/scale = Vector3(1, 1, 1)
bones/18/rotation = Quaternion(-0.795015, -0.00576372, -0.00755531, 0.606515)
bones/18/scale = Vector3(1, 1, 1)
bones/20/position = Vector3(-3.22827e-05, 0.00101243, -0.00408779)
bones/20/rotation = Quaternion(0.601259, 0.0228935, -0.00592349, 0.798704)
bones/21/rotation = Quaternion(0.959307, -3.21584e-08, 3.40547e-07, 0.282366)
bones/22/rotation = Quaternion(0.0737264, 0.113698, -0.105519, 0.985141)
bones/22/scale = Vector3(1, 1, 1)
bones/23/rotation = Quaternion(0.312519, 0.0100232, -0.0200418, 0.949647)
bones/23/scale = Vector3(1, 1, 1)
bones/24/rotation = Quaternion(0.0747459, -0.00395776, 0.0624461, 0.995238)
bones/24/scale = Vector3(1, 1, 1)
bones/25/rotation = Quaternion(0.0230935, 0.00912203, 0.128183, 0.99144)
bones/26/rotation = Quaternion(0.0286035, -1.25081e-07, 9.31705e-10, 0.999591)
bones/27/rotation = Quaternion(0.056584, 1.08732e-07, 4.33065e-08, 0.998398)
bones/27/scale = Vector3(1, 1, 1)
bones/29/position = Vector3(-7.36547e-05, 0.00106713, 0.000846029)
bones/29/rotation = Quaternion(0.104597, 0.738398, 0.662543, -0.0697456)
bones/29/scale = Vector3(1, 1, 1)
bones/30/rotation = Quaternion(0.176144, -0.0102959, -0.111164, 0.978013)
bones/30/scale = Vector3(1, 1, 1)
bones/31/rotation = Quaternion(-0.0378454, -0.257684, 0.0916494, 0.961128)
bones/33/position = Vector3(-3.22827e-05, 0.00129484, -0.00315971)
bones/33/rotation = Quaternion(5.36789e-06, 0.695464, 0.718561, 5.19552e-06)
bones/34/scale = Vector3(1, 1, 1)
bones/36/position = Vector3(-0.000672414, 0.000242326, -0.00280224)
bones/36/rotation = Quaternion(0.486421, -0.51322, -0.51322, 0.486421)
bones/36/scale = Vector3(1, 1, 1)
bones/38/position = Vector3(-0.0002511, 0.000181648, 0.00230644)
bones/38/rotation = Quaternion(0.388743, -0.59066, -0.59066, 0.388743)
bones/40/position = Vector3(0.000191333, 0.000251368, -0.00327358)
bones/40/rotation = Quaternion(0.388743, -0.59066, -0.59066, 0.388743)
bones/40/scale = Vector3(1, 1, 1)

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="rat/RootNode/RatArmature/Skeleton3D" index="1"]
transform = Transform3D(0.686517, 0.290159, 0.66671, 0.0238864, -0.925432, 0.37816, 0.726721, -0.243688, -0.642255, 0.00325984, -0.00314129, 0.000623649)
bone_name = "Head"
bone_idx = 31

[node name="left_ear" type="Node3D" parent="rat/RootNode/RatArmature/Skeleton3D/BoneAttachment3D"]
transform = Transform3D(-0.466072, 0.180776, 0.00980378, -0.0454377, -0.143012, 0.476951, 0.175247, 0.443697, 0.149736, -0.000445563, -0.0010183, 0.00128453)

[node name="sprite" type="Sprite3D" parent="rat/RootNode/RatArmature/Skeleton3D/BoneAttachment3D/left_ear"]
transform = Transform3D(0.996603, 0.0548781, -0.0614132, -0.0558267, 0.998344, -0.0138372, 0.0605522, 0.0172185, 0.998017, 5.1379e-05, -0.000112642, 0.00013851)
pixel_size = 0.0001
shaded = true
texture_filter = 0
texture = ExtResource("3_vu3dv")

[node name="right_ear" type="Node3D" parent="rat/RootNode/RatArmature/Skeleton3D/BoneAttachment3D"]
transform = Transform3D(-0.868023, 0.460602, 0.185425, 0.0187907, -0.342706, 0.939254, 0.496168, 0.81878, 0.288821, 0.00127062, -0.000943786, 0.000489465)

[node name="sprite" type="Sprite3D" parent="rat/RootNode/RatArmature/Skeleton3D/BoneAttachment3D/right_ear"]
transform = Transform3D(0.5, 0, 0, 0, 0.499999, 0, 0, 0, 0.5, -5.82077e-11, 0, 0)
flip_h = true
pixel_size = 0.0001
shaded = true
texture_filter = 0
texture = ExtResource("3_vu3dv")

[node name="AnimationPlayer" parent="rat" index="1"]
autoplay = "RatArmature|Rat_Run"

[node name="collision" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 0)
shape = SubResource("SphereShape3D_y6qio")

[node name="particles" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.138826)
randomness = 1.0
fixed_fps = 0
local_coords = true
transform_align = 3
process_material = SubResource("ParticleProcessMaterial_bnanl")
draw_pass_1 = SubResource("QuadMesh_8tkjo")

[node name="navigation_agent" type="NavigationAgent3D" parent="."]
target_desired_distance = 0.5

[node name="Propeller hat" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.993566, -0.113255, 0, 0.113255, 0.993566, -0.000597358, 0.136157, 0.161456)

[node name="pickup" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource("5_7gwy5")
pitch_scale = 1.3
bus = &"Effects"

[editable path="rat"]
